{
  "someDs": {
    "name": "someDs",
    "crud": true,
    "debug": true,
    "baseURL": "http://127.0.0.1:300",            // [Optional] Keep this as a final final fallback?
    "connector": "disco-rest",

    // Consumer
    "serviceDiscovery": {
      "enabled": true,
      "adapter": "consul",                        // [Required] <consul | eureka | zookeeper | etcd>
      "adapterOptions": {...}                     // [Optional] for specific adapters
      "providers": [                              // [Required] Array or single object
        { "host": "17.0.1.1" },
        { "host": "17.0.1.1", "port": 33333 }     // [Optional] non-standard port
      ],

      // [Required] for consumed services
      // [Optional] for consumer services
      "registration": {
        "name": "twitter-1",                      // [Optional] A guid is created by default
        "type": "es-twitter",                     // [Required] Service name to lookup
        "advertiseHost": "10.10.0.1",             // [Optional] host to advertise (os.hostname used by default)
        "advertisePort": "3000",                  // [Optional] port to advertise (server config used by default)

        // [Optional] Register an HTTP(s) check with the SD service
        "checks": [
          {
            "name": "alive",                      // [Required] Identifiable name
            "route": "/healthz",                  // [Required] Route to hit for a test
            "method": "HEAD",                     // [Optional] GET is the default
            "statusCode": 204,                    // [Optional] 200 is the default (not implemented yet)
            "interval": 20000,                    // [Optional]
            "timeout": 10000,                     // [Optional]
            "adapterOptions": {...}               // [Optional] for specific adapters
          }
        ]
      },

      // [Required] For consumer services
      "pool": {
        "type": "es-twitter",                     // [Required] Service name to lookup
        "loadBalancingAlgorithm": "none",         // [Optional] <none | random | round-robin>
        "deregisterOnFail": true                  // [Optional] <none | random | round-robin>
      }
    },

    "circuitBreaker": {
      "errorThreshold": 80,                       // %
      "timeout": 10000                            // ms
    },


    "operations": [
      {
        "template": {
          "method": "POST",
          "url": "http://example.com/",
          "headers": {
            "accept": "application/json",
            "content-type": "multipart/form-data"
          },
          "form": {
            "screenName": "{screenName}"
          }
        },
        "functions": {
          "getUserByScreenName": [
            "screenName"
          ]
        }
      }
    ]
  }
}